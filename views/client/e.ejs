<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Events</title>
    <%- include('../partials/head'); %>

    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      }

      body {
        background-color: #f5f5f5;
        color: #333;
        line-height: 1.6;
      }

      .events-section {
        width: 90%;
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 15px;
      }

      h1 {
        text-align: center;
        margin-bottom: 2rem;
        color: #2c3e50;
      }

      .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
      }

      .event-card {
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }

      .event-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      }

      .event-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
      }

      .event-details {
        padding: 1.5rem;
      }

      .event-title {
        font-size: 1.3rem;
        margin-bottom: 0.5rem;
        color: #2c3e50;
      }

      .event-date {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
        color: #ef8f28;
        font-weight: 500;
      }

      .event-date i {
        margin-right: 0.5rem;
      }

      .event-location {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        color: #7f8c8d;
      }

      .event-location i {
        margin-right: 0.5rem;
      }

      .event-description {
        margin-bottom: 1.5rem;
        color: #34495e;
      }

      .event-button {
        display: inline-block;
        padding: 0.6rem 1.2rem;
        background-color: #3498db;
        color: white;
        text-decoration: none;
        border-radius: 4px;
        transition: background-color 0.3s ease;
        cursor: pointer;
        border: none;
        font-size: 1rem;
      }

      .event-button:hover {
        background-color: #2980b9;
      }

      /* Modal Styles */
      .modal {
        display: none;
        position: fixed;
        z-index: 100;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        overflow-y: auto;
      }

      .modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        padding: 2rem;
        border-radius: 8px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        animation: modalopen 0.3s;
        position: relative;
      }

      @keyframes modalopen {
        from {
          opacity: 0;
          transform: translateY(-50px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .close {
        color: #aaa;
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 1.8rem;
        font-weight: bold;
        cursor: pointer;
      }

      .close:hover {
        color: #333;
      }

      .form-group {
        margin-bottom: 1rem;
        position: relative;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
      }

      .form-group .input-error {
        border-color: #e74c3c;
      }
      .validation-error-text {
        color: #e74c3c;
        font-size: 0.8rem;
        margin-top: 4px;
        display: none;
      }

      .modal-btn {
        background-color: #3498db;
        color: white;
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        width: 100%;
        text-align: center;
        margin-top: 1.5rem;
      }

      .modal-btn:hover {
        background-color: #2980b9;
      }

      .modal-helpline {
        text-align: center;
        padding: 10px;
        background-color: #f2f2f2;
        border-radius: 4px;
        margin-bottom: 1.5rem;
        font-weight: 500;
      }
      .modal-helpline i {
        margin-right: 8px;
        color: #3498db;
      }

      .calculation-summary,
      .payment-instructions,
      .success-message {
        text-align: center;
        padding: 1rem 0;
      }
      .calculation-summary p {
        margin-bottom: 0.8rem;
        font-size: 1.1rem;
      }
      .calculation-summary .total {
        font-weight: bold;
        color: #2c3e50;
        font-size: 1.3rem;
        border-top: 1px solid #eee;
        padding-top: 1rem;
        margin-top: 1rem;
      }
      .payment-instructions {
        background-color: #fffbe6;
        border: 1px solid #ffe58f;
        padding: 1rem;
        border-radius: 4px;
        margin: 1.5rem 0;
        text-align: left;
      }
      .success-message i {
        font-size: 3rem;
        color: #2ecc71;
        margin-bottom: 1rem;
      }

      .success-message h3 {
        color: #2c3e50; /* Changed color to be more neutral */
        margin-bottom: 1rem;
      }

      @media (max-width: 768px) {
        .events-grid {
          grid-template-columns: 1fr;
        }
        .modal-content {
          margin: 10% auto;
          width: 95%;
        }
      }
    </style>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
  </head>
  <body>
    <%- include('../partials/navbar'); %>
    <div class="events-section">
      <h1>Upcoming Events</h1>

      <div class="events-grid">
        <!-- Event Loop Starts -->
        <% if (events.length > 0) { %> <% events.forEach(event => { %>

        <div class="event-card">
          <img src="<%= event.image %>" alt="Event Image" class="event-image" />
          <div class="event-details">
            <h3 class="event-title"><%= event.title %></h3>
            <div class="event-date">
              <i class="far fa-calendar-alt"></i>
              <%= event.date.toISOString().split('T')[0]; %>
            </div>
            <div class="event-date">
              <i class="fas fa-clock"></i> <%= event.time %>
            </div>
            <div class="event-location">
              <i class="fas fa-map-marker-alt"></i>
              <%= event.venue %>
            </div>
            <p class="event-description"><%= event.description %></p>
            <!-- 
              MODIFICATION: Replaced onclick with data-* attributes.
              This is the fix for the screenshot error. It separates data from JS code.
            -->
            <button
              class="event-button"
              data-event-title="<%= event.title %>"
              data-event-price="<%= event.price || 299 %>"
            >
              Get Tickets
            </button>
          </div>
        </div>

        <% }) %> <% } else { %>
        <p>No Events Available at this movement.</p>
        <% } %>
        <!-- Event Loop Ends -->
      </div>
    </div>

    <!-- Modal with Validation -->
    <div id="bookingModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeModal()">Ã—</span>

        <div class="modal-helpline">
          <i class="fas fa-headset"></i> Helpline: +91 12345 67890
        </div>

        <!-- Step 1: User Details -->
        <div id="modalStep1">
          <h2>Event Registration</h2>
          <p
            id="selectedEvent"
            style="margin-bottom: 1.5rem; color: #3498db; font-weight: 500"
          ></p>
          <form id="bookingForm" onsubmit="return false;">
            <div class="form-group">
              <label for="name">Full Name</label>
              <input type="text" id="name" required minlength="3" />
              <div class="validation-error-text" id="nameError"></div>
            </div>
            <!-- MODIFICATION: Added Email Field -->
            <div class="form-group">
              <label for="email">Email Address</label>
              <input type="email" id="email" required />
              <div class="validation-error-text" id="emailError"></div>
            </div>
            <div class="form-group">
              <label for="phone">Phone Number</label>
              <input type="tel" id="phone" required maxlength="10" />
              <div class="validation-error-text" id="phoneError"></div>
            </div>
            <div class="form-group">
              <label for="address">Address</label>
              <textarea
                id="address"
                rows="3"
                required
                minlength="10"
              ></textarea>
              <div class="validation-error-text" id="addressError"></div>
            </div>
            <div class="form-group">
              <label for="tickets">Number of Tickets</label>
              <select id="tickets" required>
                <option value="">Select tickets</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
              </select>
              <div class="validation-error-text" id="ticketsError"></div>
            </div>
            <button type="button" class="modal-btn" onclick="goToStep2()">
              Continue
            </button>
          </form>
        </div>

        <!-- Step 2: Calculation & Payment Info -->
        <div id="modalStep2" style="display: none">
          <h2>Booking Summary</h2>
          <div class="calculation-summary">
            <p><strong>Name:</strong> <span id="summaryName"></span></p>
            <!-- MODIFICATION: Added Email to summary -->
            <p><strong>Email:</strong> <span id="summaryEmail"></span></p>
            <p><strong>Phone:</strong> <span id="summaryPhone"></span></p>
            <p><strong>Tickets:</strong> <span id="summaryTickets"></span></p>
            <p>
              <strong>Price per Ticket:</strong> â‚¹<span
                id="summaryPrice"
              ></span>
            </p>
            <p class="total">Total Amount: â‚¹<span id="summaryTotal"></span></p>
          </div>
          <!-- MODIFICATION: Updated payment instructions to professional English -->
          <div class="payment-instructions">
            <h4>Payment Instructions</h4>
            <p>
              To proceed, please complete the payment using your preferred
              method. Once successful, you will receive a
              <strong>UTR / Transaction ID.</strong>
            </p>
            <p>
              Please enter this ID in the next step to help us confirm your
              booking. Your tickets will be sent to your registered email upon
              successful verification.
            </p>
          </div>
          <button type="button" class="modal-btn" onclick="goToStep3()">
            Payment Done, Enter UTR
          </button>
        </div>

        <!-- Step 3: UTR Entry -->
        <div id="modalStep3" style="display: none">
          <h2>Confirm Booking</h2>
          <p style="margin-bottom: 1rem">
            Please enter the UTR / Transaction ID you received after payment to
            confirm your booking.
          </p>
          <form onsubmit="return false;">
            <div class="form-group">
              <label for="utr">UTR / Transaction ID</label>
              <input
                type="text"
                id="utr"
                placeholder="Enter transaction ID here"
                required
                minlength="6"
              />
              <div class="validation-error-text" id="utrError"></div>
            </div>
            <button type="button" class="modal-btn" onclick="submitBooking()">
              Submit Booking
            </button>
          </form>
        </div>

        <!-- Step 4: Success Message -->
        <div id="modalSuccess" class="success-message" style="display: none">
          <!-- MODIFICATION: Changed success message to reflect verification step -->
          <i class="fas fa-hourglass-half" style="color: #f39c12"></i>
          <h3>Booking Received & Awaiting Confirmation</h3>
          <p>
            Thank you. We have received your booking details. Our team will now
            verify the transaction. Once confirmed, your tickets will be sent to
            your registered email.
          </p>
          <button class="modal-btn" onclick="closeModal()">Done</button>
        </div>
      </div>
    </div>
    <%- include('../partials/footer'); %>

    <script>
      const modal = document.getElementById("bookingModal");
      const step1 = document.getElementById("modalStep1");
      const step2 = document.getElementById("modalStep2");
      const step3 = document.getElementById("modalStep3");
      const successStep = document.getElementById("modalSuccess");

      let bookingData = {};

      function openModal(eventName, price) {
        bookingData = { event: eventName, pricePerTicket: parseFloat(price) };
        document.getElementById(
          "selectedEvent"
        ).textContent = `Event: ${eventName}`;
        document.getElementById("bookingForm").reset();
        document.getElementById("utr").value = "";
        clearAllErrors();
        step1.style.display = "block";
        step2.style.display = "none";
        step3.style.display = "none";
        successStep.style.display = "none";
        modal.style.display = "block";
        document.body.style.overflow = "hidden";
      }

      function closeModal() {
        modal.style.display = "none";
        document.body.style.overflow = "auto";
      }

      function showError(inputId, message) {
        const inputElement = document.getElementById(inputId);
        const errorElement = document.getElementById(inputId + "Error");
        inputElement.classList.add("input-error");
        errorElement.textContent = message;
        errorElement.style.display = "block";
      }

      function clearAllErrors() {
        const invalidInputs = document.querySelectorAll(".input-error");
        invalidInputs.forEach((input) => input.classList.remove("input-error"));
        const errorMessages = document.querySelectorAll(
          ".validation-error-text"
        );
        errorMessages.forEach((msg) => (msg.style.display = "none"));
      }

      function goToStep2() {
        clearAllErrors();
        let isValid = true;

        const name = document.getElementById("name").value.trim();
        const email = document.getElementById("email").value.trim(); // Get email
        const phone = document.getElementById("phone").value.trim();
        const address = document.getElementById("address").value.trim();
        const tickets = document.getElementById("tickets").value;

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const phoneRegex = /^\d{10}$/;

        if (name.length < 3) {
          showError("name", "Full name must be at least 3 characters long.");
          isValid = false;
        }

        if (!emailRegex.test(email)) {
          // Validate email
          showError("email", "Please enter a valid email address.");
          isValid = false;
        }

        if (!phoneRegex.test(phone)) {
          showError("phone", "Please enter a valid 10-digit phone number.");
          isValid = false;
        }

        if (address.length < 10) {
          showError("address", "Address must be at least 10 characters long.");
          isValid = false;
        }

        if (tickets === "") {
          showError("tickets", "Please select the number of tickets.");
          isValid = false;
        }

        if (!isValid) {
          return;
        }

        bookingData.name = name;
        bookingData.email = email; // Save email
        bookingData.phone = phone;
        bookingData.address = address;
        bookingData.tickets = parseInt(tickets, 10);
        bookingData.totalAmount =
          bookingData.tickets * bookingData.pricePerTicket;

        document.getElementById("summaryName").textContent = bookingData.name;
        document.getElementById("summaryEmail").textContent = bookingData.email; // Show email in summary
        document.getElementById("summaryPhone").textContent = bookingData.phone;
        document.getElementById("summaryTickets").textContent =
          bookingData.tickets;
        document.getElementById("summaryPrice").textContent =
          bookingData.pricePerTicket;
        document.getElementById("summaryTotal").textContent =
          bookingData.totalAmount;

        step1.style.display = "none";
        step2.style.display = "block";
      }

      function goToStep3() {
        step2.style.display = "none";
        step3.style.display = "block";
      }

      function submitBooking() {
        clearAllErrors();
        const utr = document.getElementById("utr").value.trim();

        if (utr.length < 6) {
          showError(
            "utr",
            "UTR/Transaction ID seems too short. Please check and enter again."
          );
          return;
        }

        bookingData.utr = utr;

        console.log("Data to be sent to server:", bookingData);

        step3.style.display = "none";
        successStep.style.display = "block";
      }

      window.onclick = function (event) {
        if (event.target == modal) {
          closeModal();
        }
      };

      // MODIFICATION: Added Event Listener to fix the screenshot error.
      // This code runs when the page loads.
      document.addEventListener("DOMContentLoaded", () => {
        // Find all "Get Tickets" buttons
        const ticketButtons = document.querySelectorAll(".event-button");
        // Add a click listener to each button
        ticketButtons.forEach((button) => {
          button.addEventListener("click", () => {
            // Get the event title and price from the data attributes
            const title = button.dataset.eventTitle;
            const price = button.dataset.eventPrice;
            // Call the openModal function with this data
            openModal(title, price);
          });
        });
      });
    </script>
    <%- include('../partials/scripts'); %>
  </body>
</html>


