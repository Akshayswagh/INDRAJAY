<%# views/admin/view_care_management.ejs %>
<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">
        <h1 class="mb-0"><%= title %></h1>
        <a href="/admin/care-management/add" class="btn btn-success">
            <i class="fas fa-plus-circle me-1"></i> Add New Entry
        </a>
    </div>
    <div class="card shadow-sm">
        <div class="card-header"><h5 class="mb-0">Care & Management Entries</h5></div>
        <div class="card-body p-0">
            <% if (typeof entries !== 'undefined' && entries.length > 0) { %>
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Image</th>
                                <th>Title</th>
                                <th>Description (Snippet)</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% entries.forEach((entry, index) => { %>
                                <tr>
                                    <td><%= (currentPage - 1) * limit + index + 1 %></td>
                                    <td>
                                        <% if (entry.image) { %>
                                            <img src="<%= entry.image %>" alt="<%= entry.title %>" style="width: 60px; height: 60px; object-fit: cover;" class="img-thumbnail">
                                        <% } else { %>
                                            <img src="/images/placeholder.png" alt="No image" style="width: 60px; height: 60px; object-fit: cover;" class="img-thumbnail">
                                        <% } %>
                                    </td>
                                    <td><%= entry.title %></td>
                                    <td><%= entry.description.substring(0, 100) %><% if (entry.description.length > 100) { %>...<% } %></td>
                                    <td><%= new Date(entry.createdAt).toLocaleDateString() %></td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-primary me-1 edit-entry-btn" title="Edit Entry"
                                            data-bs-toggle="modal" data-bs-target="#editCareModal"
                                            data-id="<%= entry._id %>"
                                            data-title="<%= entry.title %>"
                                            data-description="<%= entry.description %>"
                                            data-image="<%= entry.image %>">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <form action="/admin/api/care-management/<%= entry._id %>?_method=DELETE" method="POST" class="d-inline delete-form">
                                            <button type="submit" class="btn btn-sm btn-danger" title="Delete Entry">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            <% } else { %>
                <div class="alert alert-info m-3">No entries found. <a href="/admin/care-management/add">Add a new entry.</a></div>
            <% } %>
        </div>
        <%# Pagination Footer - similar to other view_*.ejs files %>
        <% if (typeof entries !== 'undefined' && entries.length > 0 && typeof totalPages !== 'undefined' && totalPages > 1) { %>
        <div class="card-footer">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-0">
                    <% if (currentPage > 1) { %><li class="page-item"><a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">Previous</a></li><% } else { %><li class="page-item disabled"><a class="page-link" href="#">Previous</a></li><% } %>
                    <% for(let i = 1; i <= totalPages; i++) { %><li class="page-item <%= currentPage === i ? 'active' : '' %>"><a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a></li><% } %>
                    <% if (currentPage < totalPages) { %><li class="page-item"><a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">Next</a></li><% } else { %><li class="page-item disabled"><a class="page-link" href="#">Next</a></li><% } %>
                </ul>
            </nav>
        </div>
        <% } %>
    </div>
</div>

<!-- Edit Care & Management Modal -->
<div class="modal fade" id="editCareModal" tabindex="-1" aria-labelledby="editCareModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCareModalLabel">Edit Care & Management Entry</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCareForm" method="POST" enctype="multipart/form-data" novalidate>
                <div class="modal-body">
                    <input type="hidden" id="editEntryId" name="entryId">
                    <div class="mb-3">
                        <label for="editEntryTitle" class="form-label">Title <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editEntryTitle" name="title" required>
                        <div class="invalid-feedback">Title is required.</div>
                    </div>
                    <div class="mb-3">
                        <label for="editEntryDescription" class="form-label">Description <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="editEntryDescription" name="description" rows="3" required></textarea>
                        <div class="invalid-feedback">Description is required.</div>
                    </div>
                    <div class="row align-items-end">
                        <div class="col-md-8 mb-3">
                            <label for="editEntryImageFile" class="form-label">New Image (Optional)</label>
                            <input type="file" class="form-control" id="editEntryImageFile" name="image" accept="image/*">
                            <small class="form-text text-muted">Upload to replace current image.</small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <p class="mb-1 small">Current Image:</p>
                            <img id="editEntryCurrentImage" src="" alt="Current Image" class="img-thumbnail" style="max-height: 100px; display: none;">
                            <span id="noCurrentEntryImageText" class="text-muted small" style="display: none;">No current image.</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="editCareSubmitBtn">
                        <span class="spinner-border spinner-border-sm me-1" style="display: none;"></span>
                        <span class="button-text">Save Changes</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<%- include('../partials/admin_footer') %>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Delete confirmation
        document.querySelectorAll('.delete-form').forEach(form => {
            form.addEventListener('submit', event => {
                if (!confirm('Are you sure you want to delete this entry?')) event.preventDefault();
            });
        });

        // Edit Modal Logic
        const editCareModalElement = document.getElementById('editCareModal');
        // const editCareModal = editCareModalElement ? new bootstrap.Modal(editCareModalElement) : null; // Bootstrap instance
        const editCareForm = document.getElementById('editCareForm');

        // Get references to modal input elements
        const editEntryIdEl = document.getElementById('editEntryId');
        const editEntryTitleEl = document.getElementById('editEntryTitle');
        const editEntryDescriptionEl = document.getElementById('editEntryDescription');
        const editEntryImageFileEl = document.getElementById('editEntryImageFile'); // For the <input type="file">
        const editEntryCurrentImageEl = document.getElementById('editEntryCurrentImage'); // For the <img> tag
        const noCurrentEntryImageTextEl = document.getElementById('noCurrentEntryImageText'); // For the "no image" text
        const editCareSubmitButton = document.getElementById('editCareSubmitBtn');

        // Verify elements are found (optional, but good for initial setup)
        if (!editCareForm) console.error("Modal form #editCareForm not found!");
        if (!editEntryTitleEl) console.error("Modal input #editEntryTitle not found!");
        if (!editEntryDescriptionEl) console.error("Modal textarea #editEntryDescription not found!");
        // Add similar checks for other elements if issues persist


        document.querySelectorAll('.edit-entry-btn').forEach(button => {
            button.addEventListener('click', function() {
                // console.log("--- Edit Button Clicked ---");
                // console.log("Button's full dataset:", JSON.stringify(this.dataset, null, 2));

                const entryId = this.dataset.id;
                const title = this.dataset.title;
                const description = this.dataset.description;
                const currentImageUrl = this.dataset.image;

                // console.log(`Populating modal for ID: ${entryId}`);
                // console.log(`  Title from data-* : '${title}'`);
                // console.log(`  Description from data-* : '${description}'`);
                // console.log(`  Image URL from data-* : '${currentImageUrl}'`);

                if (editEntryIdEl) {
                    editEntryIdEl.value = entryId || '';
                }
                if (editEntryTitleEl) {
                    editEntryTitleEl.value = title || '';
                } else {
                    console.warn("Warning: editEntryTitleEl not found in DOM to set value.");
                }

                if (editEntryDescriptionEl) {
                    editEntryDescriptionEl.value = description || '';
                } else {
                    console.warn("Warning: editEntryDescriptionEl not found in DOM to set value.");
                }

                if (editEntryImageFileEl) {
                    editEntryImageFileEl.value = ''; // Clear previously selected file
                }

                // Handle current image display
                if (editEntryCurrentImageEl && noCurrentEntryImageTextEl) {
                    if (currentImageUrl && currentImageUrl.trim() !== '' && currentImageUrl !== 'null' && currentImageUrl !== 'undefined') {
                        editEntryCurrentImageEl.src = currentImageUrl;
                        editEntryCurrentImageEl.style.display = 'block';
                        noCurrentEntryImageTextEl.style.display = 'none';
                    } else {
                        editEntryCurrentImageEl.src = ''; // Clear src
                        editEntryCurrentImageEl.style.display = 'none';
                        noCurrentEntryImageTextEl.style.display = 'inline';
                    }
                }

                // Set form action
                if (editCareForm) {
                    editCareForm.action = `/admin/api/care-management/${entryId}?_method=PUT`;
                    editCareForm.classList.remove('was-validated'); // Reset Bootstrap validation styling
                }

                // Reset submit button
                if (editCareSubmitButton) {
                    editCareSubmitButton.disabled = false;
                    const buttonTextSpan = editCareSubmitButton.querySelector('.button-text');
                    const spinnerSpan = editCareSubmitButton.querySelector('.spinner-border');
                    if(buttonTextSpan) buttonTextSpan.textContent = 'Save Changes';
                    if(spinnerSpan) spinnerSpan.style.display = 'none';
                }
            });
        });

        // Edit form submission handling
        if (editCareForm && editCareSubmitButton) {
            editCareForm.addEventListener('submit', function(event) {
                if (!editCareForm.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                    editCareForm.classList.add('was-validated');
                    return;
                }
                editCareSubmitButton.disabled = true;
                const buttonTextSpan = editCareSubmitButton.querySelector('.button-text');
                const spinnerSpan = editCareSubmitButton.querySelector('.spinner-border');
                if(buttonTextSpan) buttonTextSpan.textContent = 'Saving...';
                if(spinnerSpan) spinnerSpan.style.display = 'inline-block';
            });
        }
    });
</script>