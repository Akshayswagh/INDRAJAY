<%# Pass { title: 'Manage Logistics', activePage: 'view_logistics', logistics: logisticsArray, ... } from controller %>

<!-- <div class="d-flex justify-content-between align-items-center mb-4">
  <h1 class="mt-0 mb-0">Manage Logistic Orders</h1>
  <a href="/admin/logistics/add" class="btn btn-success">
    <i class="fas fa-plus-circle me-1"></i> Add New Order
  </a>
</div> -->

<!-- ================================================================= -->
<!-- CHANGE 1: ADD HIDDEN DIV TO SAFELY STORE FLASH MESSAGES -->
<!-- We use single quotes for data-messages because JSON.stringify uses double quotes -->
<div id="flash-data-container" data-messages='<%- JSON.stringify(messages) %>'></div>
<!-- ================================================================= -->

<p>A list of all logistic orders in the system.</p>

<div class="card shadow-sm">
  <div class="card-header">
    <h5 class="mb-0">Logistic Orders List</h5>
  </div>
  <div class="card-body p-0">
    <% if (typeof logistics !== 'undefined' && logistics.length > 0) { %>
    <div class="table-responsive-custom">
      <table class="table table-striped table-hover mb-0">
        <thead class="table-dark">
          <tr>
            <th>Pickup</th>
            <th>Delivery</th>
            <th>Truck</th>
            <th>Status</th>
            <th>Created At</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% logistics.forEach((item) => { %>
          <tr>
            <td><%= item.pickup.address %></td>
            <td><%= item.delivery.address %></td>
            <td><%= item.truck %></td>
            <td>
              <% 
                let badgeClass = 'bg-secondary';
                switch(item.status) {
                  case 'pending': badgeClass = 'bg-warning text-dark'; break;
                  case 'confirmed': badgeClass = 'bg-info text-dark'; break;
                  case 'in-transit': badgeClass = 'bg-primary'; break;
                  case 'delivered': badgeClass = 'bg-success'; break;
                  case 'cancelled': badgeClass = 'bg-danger'; break;
                }
              %>
              <span class="badge <%= badgeClass %>"><%= item.status %></span>
            </td>
            <td><%= new Date(item.createdAt).toLocaleDateString() %></td>
            <td>
              <button
                type="button"
                class="btn btn-sm btn-info me-1 view-item-btn"
                title="View Details"
                data-bs-toggle="modal"
                data-bs-target="#viewItemModal"
                data-id="<%= item._id %>"
                data-pickup-address="<%= item.pickup.address %>"
                data-delivery-address="<%= item.delivery.address %>"
                data-distance="<%= item.distance %>"
                data-fare="<%= item.estimatedFare %>"
                data-truck="<%= item.truck %>"
                data-goods-type="<%= item.goodsType %>"
                data-weight="<%= item.weight %>"
                data-weight-unit="<%= item.weightUnit %>"
                data-mobile="<%= item.mobile %>"
                data-status="<%= item.status %>"
              >
                <i class="fas fa-eye"></i>
              </button>
              <button
                type="button"
                class="btn btn-sm btn-primary me-1 edit-item-btn"
                title="Edit Item"
                data-bs-toggle="modal"
                data-bs-target="#editItemModal"
                data-id="<%= item._id %>"
                data-pickup-address="<%= item.pickup.address %>"
                data-delivery-address="<%= item.delivery.address %>"
                data-distance="<%= item.distance %>"
                data-fare="<%= item.estimatedFare %>"
                data-truck="<%= item.truck %>"
                data-goods-type="<%= item.goodsType %>"
                data-weight="<%= item.weight %>"
                data-weight-unit="<%= item.weightUnit %>"
                data-mobile="<%= item.mobile %>"
                data-status="<%= item.status %>"
              >
                <i class="fas fa-edit"></i>
              </button>

              <form action="/admin/api/logistics/<%= item._id %>?_method=DELETE" method="POST" class="d-inline delete-form">
                <button type="submit" class="btn btn-sm btn-danger" title="Delete Item">
                  <i class="fas fa-trash"></i>
                </button>
              </form>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    <% } else { %>
    <div class="alert alert-info m-3" role="alert">
      No logistic orders found. </a>
    </div>
    <% } %>
  </div>
</div>

<!-- View Item Modal -->
<div class="modal fade" id="viewItemModal" tabindex="-1" aria-labelledby="viewItemModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="viewItemModalLabel">View Logistic Order</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6 border-end">
            <h6><i class="fas fa-box-open text-primary me-2"></i>Pickup Details</h6>
            <p><strong>Address:</strong> <span id="viewPickupAddress"></span></p>
          </div>
          <div class="col-md-6">
            <h6><i class="fas fa-truck-loading text-success me-2"></i>Delivery Details</h6>
            <p><strong>Address:</strong> <span id="viewDeliveryAddress"></span></p>
          </div>
        </div>
        <hr>
        <h6><i class="fas fa-info-circle text-info me-2"></i>Order Information</h6>
        <p class="mb-1"><strong>Goods:</strong> <span id="viewGoodsType"></span></p>
        <p class="mb-1"><strong>Weight:</strong> <span id="viewWeight"></span></p>
        <p class="mb-1"><strong>Truck:</strong> <span id="viewTruck"></span></p>
        <p class="mb-1"><strong>Distance:</strong> <span id="viewDistance"></span></p>
        <p class="mb-1"><strong>Fare:</strong> <span id="viewFare"></span></p>
        <p class="mb-1"><strong>Contact:</strong> <span id="viewMobile"></span></p>
        <p><strong>Status:</strong> <span id="viewStatus" class="fw-bold"></span></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="viewModalEditBtn">Edit Order</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Item Modal -->
<div class="modal fade" id="editItemModal" tabindex="-1" aria-labelledby="editItemModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editItemModalLabel">Edit Logistic Order</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="editItemForm" method="POST"> <%# Action will be set by JS %>
        <div class="modal-body">
          <input type="hidden" id="editItemId" name="itemId" />
          <div class="row">
            <div class="col-md-6 border-end mb-3">
              <h5>Pickup Details</h5>
              <div class="mb-3">
                <label for="editPickupAddress" class="form-label">Address</label>
                <input type="text" class="form-control" id="editPickupAddress" name="pickup[address]" required />
              </div>
            </div>
            <div class="col-md-6 mb-3">
              <h5>Delivery Details</h5>
              <div class="mb-3">
                <label for="editDeliveryAddress" class="form-label">Address</label>
                <input type="text" class="form-control" id="editDeliveryAddress" name="delivery[address]" required />
              </div>
            </div>
          </div>
          <hr>
          <h5>Order Information</h5>
          <div class="row">
            <div class="col-md-4 mb-3">
                <label for="editGoodsType" class="form-label">Goods Type</label>
                <input type="text" class="form-control" id="editGoodsType" name="goodsType" required />
            </div>
            <div class="col-md-4 mb-3">
                <label for="editWeight" class="form-label">Weight</label>
                <input type="number" class="form-control" id="editWeight" name="weight" required />
            </div>
            <div class="col-md-4 mb-3">
                <label for="editWeightUnit" class="form-label">Weight Unit</label>
                 <select class="form-select" id="editWeightUnit" name="weightUnit" required>
                    <option value="kg">kg</option>
                    <option value="lb">lb</option>
                    <option value="ton">ton</option>
                </select>
            </div>
          </div>
           <div class="row">
            <div class="col-md-3 mb-3">
                <label for="editTruck" class="form-label">Truck</label>
                <input type="text" class="form-control" id="editTruck" name="truck" required />
            </div>
            <div class="col-md-3 mb-3">
                <label for="editDistance" class="form-label">Distance</label>
                <input type="text" class="form-control" id="editDistance" name="distance" required />
            </div>
            <div class="col-md-3 mb-3">
                <label for="editFare" class="form-label">Estimated Fare</label>
                <input type="text" class="form-control" id="editFare" name="estimatedFare" required />
            </div>
            <div class="col-md-3 mb-3">
                <label for="editMobile" class="form-label">Contact Mobile</label>
                <input type="text" class="form-control" id="editMobile" name="mobile" required />
            </div>
          </div>
           <div class="row">
               <div class="col-md-4 mb-3">
                <label for="editStatus" class="form-label">Status</label>
                 <select class="form-select" id="editStatus" name="status" required>
                    <option value="pending">Pending</option>
                    <option value="confirmed">Confirmed</option>
                    <option value="Froad">Froad</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
           </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // --- Section 1: Modal and Form Logic ---
    const viewItemModal = new bootstrap.Modal(document.getElementById("viewItemModal"));
    const viewModalEditBtn = document.getElementById("viewModalEditBtn");
    const editItemForm = document.getElementById("editItemForm");
    let currentViewItemId = null;

    document.querySelectorAll(".view-item-btn").forEach((button) => {
      button.addEventListener("click", function () {
        currentViewItemId = this.dataset.id;
        document.getElementById("viewPickupAddress").textContent = this.dataset.pickupAddress;
        document.getElementById("viewDeliveryAddress").textContent = this.dataset.deliveryAddress;
        document.getElementById("viewGoodsType").textContent = this.dataset.goodsType;
        document.getElementById("viewWeight").textContent = `${this.dataset.weight} ${this.dataset.weightUnit}`;
        document.getElementById("viewTruck").textContent = this.dataset.truck;
        document.getElementById("viewDistance").textContent = this.dataset.distance;
        document.getElementById("viewFare").textContent = this.dataset.fare;
        document.getElementById("viewMobile").textContent = this.dataset.mobile;
        document.getElementById("viewStatus").textContent = this.dataset.status;
      });
    });

    viewModalEditBtn.addEventListener("click", function () {
      viewItemModal.hide();
      const editButtonForViewedItem = document.querySelector(`.edit-item-btn[data-id="${currentViewItemId}"]`);
      if (editButtonForViewedItem) {
        editButtonForViewedItem.click();
      }
    });
    
    document.querySelectorAll(".edit-item-btn").forEach((button) => {
      button.addEventListener("click", function () {
        const itemId = this.dataset.id;
        document.getElementById("editItemId").value = itemId;
        document.getElementById("editPickupAddress").value = this.dataset.pickupAddress;
        document.getElementById("editDeliveryAddress").value = this.dataset.deliveryAddress;
        document.getElementById("editGoodsType").value = this.dataset.goodsType;
        document.getElementById("editWeight").value = this.dataset.weight;
        document.getElementById("editWeightUnit").value = this.dataset.weightUnit;
        document.getElementById("editTruck").value = this.dataset.truck;
        document.getElementById("editDistance").value = this.dataset.distance;
        document.getElementById("editFare").value = this.dataset.fare;
        document.getElementById("editMobile").value = this.dataset.mobile;
        document.getElementById("editStatus").value = this.dataset.status;
        editItemForm.action = `/admin/api/logistics/${itemId}?_method=PUT`;
      });
    });

    document.querySelectorAll(".delete-form").forEach((form) => {
      form.addEventListener("submit", function (event) {
        if (!confirm("Are you sure you want to delete this order? This action cannot be undone.")) {
          event.preventDefault();
        }
      });
    });

    // --- Section 2: Toast Popup Logic ---

    const showToast = (message, type = 'success') => {
        const toastContainer = document.querySelector('.toast-container');
        if (!toastContainer) {
          console.error('Toast container not found!');
          return;
        }

        const toastId = 'toast-' + Date.now();
        const toastBgColor = type === 'success' ? 'bg-success' : 'bg-danger';
        const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';

        const toastHTML = `
            <div id="${toastId}" class="toast align-items-center text-white ${toastBgColor} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas ${iconClass} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        
        toastContainer.insertAdjacentHTML('beforeend', toastHTML);
        
        const toastElement = document.getElementById(toastId);
        const toast = new bootstrap.Toast(toastElement, { delay: 5000 });
        
        toastElement.addEventListener('hidden.bs.toast', () => toastElement.remove());
        toast.show();
    };
    
    // =================================================================
    // CHANGE 2: READ MESSAGES FROM THE HIDDEN DIV INSTEAD OF DIRECTLY
    // This is now 100% valid JavaScript that your editor will understand.
    const flashContainer = document.getElementById('flash-data-container');
    if (flashContainer && flashContainer.dataset.messages) {
      const flashMessages = JSON.parse(flashContainer.dataset.messages);

      // Check for messages and trigger the toast popup if they exist.
      if (flashMessages.success_msg && flashMessages.success_msg.length > 0) {
          showToast(flashMessages.success_msg[0], 'success');
      }
      if (flashMessages.error_msg && flashMessages.error_msg.length > 0) {
          showToast(flashMessages.error_msg[0], 'danger');
      }
    }
    // =================================================================
  });
</script>