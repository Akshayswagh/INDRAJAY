<%# Pass { title: 'View Export Items', activePage: 'view_exports', exports:
exportsArray, currentUser: userObject } from controller %>

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1 class="mt-0 mb-0">Manage Export Items</h1>
  <a href="/admin/exports/add" class="btn btn-success"
    ><i class="fas fa-plus-circle me-1"></i> Add New Item</a
  >
</div>
<p>A list of all export items in the catalog.</p>

<%# Flash Messages - these will show after redirects %> <% if
(messages.success_msg && messages.success_msg.length > 0) { %>
<div class="alert alert-success alert-dismissible fade show" role="alert">
  <%= messages.success_msg.join('<br />') %>
  <button
    type="button"
    class="btn-close"
    data-bs-dismiss="alert"
    aria-label="Close"
  ></button>
</div>
<% } %> <% if (messages.error_msg && messages.error_msg.length > 0) { %>
<div class="alert alert-danger alert-dismissible fade show" role="alert">
  <%= messages.error_msg.join('<br />') %>
  <button
    type="button"
    class="btn-close"
    data-bs-dismiss="alert"
    aria-label="Close"
  ></button>
</div>
<% } %>

<div class="card shadow-sm">
  <div class="card-header">
    <div class="row">
      <div class="col-md-8">
        <h5 class="mb-0">Export Items List</h5>
      </div>
      <div class="col-md-4 d-flex justify-content-end">
        <!-- Add search/filter inputs here if needed -->
      </div>
    </div>
  </div>
  <div class="card-body p-0">
    <% if (typeof exports !== 'undefined' && exports.length > 0) { %>
    <div class="table-responsive-custom">
      <table class="table table-striped table-hover mb-0">
        <thead class="table-dark">
          <tr>
            <th>Image</th>
            <th>Name</th>
            <th>Category</th>
            <th>Created At</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% exports.forEach((item) => { %>
          <tr>
            <td>
              <img
                src="<%= item.image %>"
                alt="<%= item.name %>"
                style="width: 60px; height: 60px; object-fit: cover"
                class="img-thumbnail"
              />
            </td>
            <td><%= item.name %></td>
            <td><%= item.category %></td>
            <td><%= new Date(item.createdAt).toLocaleDateString() %></td>
            <td>
              <button
                type="button"
                class="btn btn-sm btn-info me-1 view-item-btn"
                title="View Details"
                data-bs-toggle="modal"
                data-bs-target="#viewItemModal"
                data-id="<%= item._id %>"
                data-name="<%= item.name %>"
                data-category="<%= item.category %>"
                data-description="<%= item.description %>"
                data-image="<%= item.image %>"
              >
                <i class="fas fa-eye"></i>
              </button>
              <button
                type="button"
                class="btn btn-sm btn-primary me-1 edit-item-btn"
                title="Edit Item"
                data-bs-toggle="modal"
                data-bs-target="#editItemModal"
                data-id="<%= item._id %>"
                data-name="<%= item.name %>"
                data-category="<%= item.category %>"
                data-description="<%= item.description %>"
                data-image="<%= item.image %>"
              >
                <i class="fas fa-edit"></i>
              </button>

              <form
                action="/admin/api/exports/<%= item._id %>?_method=DELETE"
                method="POST"
                class="d-inline delete-form"
              >
                <button
                  type="submit"
                  class="btn btn-sm btn-danger"
                  title="Delete Item"
                >
                  <i class="fas fa-trash"></i>
                </button>
              </form>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    <% } else { %>
    <div class="alert alert-info m-3" role="alert">
      No export items found. <a href="/admin/exports/add">Add a new item.</a>
    </div>
    <% } %>
  </div>
  <% if (typeof exports !== 'undefined' && exports.length > 0 && typeof
  totalPages !== 'undefined' && totalPages > 1) { %>
  <div class="card-footer">
    <%# Pagination (Example - implement actual pagination logic) %>
    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center mb-0">
        <% for(let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
        </li>
        <% } %>
      </ul>
    </nav>
  </div>
  <% } %>
</div>

<!-- View Item Modal -->
<div
  class="modal fade"
  id="viewItemModal"
  tabindex="-1"
  aria-labelledby="viewItemModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="viewItemModalLabel">View Export Item</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-4">
            <img
              id="viewItemImage"
              src=""
              alt="Item Image"
              class="img-fluid rounded mb-3"
            />
          </div>
          <div class="col-md-8">
            <h3 id="viewItemName"></h3>
            <p>
              <strong>Category:</strong> <span id="viewItemCategory"></span>
            </p>
            <p><strong>Description:</strong></p>
            <p id="viewItemDescription" style="white-space: pre-wrap"></p>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
        <button type="button" class="btn btn-primary" id="viewModalEditBtn">
          Edit Item
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Item Modal -->
<div
  class="modal fade"
  id="editItemModal"
  tabindex="-1"
  aria-labelledby="editItemModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editItemModalLabel">Edit Export Item</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <form id="editItemForm" method="POST" enctype="multipart/form-data">
        <%# Action will be set by JS %>
        <div class="modal-body">
          <input type="hidden" id="editItemId" name="itemId" />
          <div class="mb-3">
            <label for="editItemName" class="form-label"
              >Item Name <span class="text-danger">*</span></label
            >
            <input
              type="text"
              class="form-control"
              id="editItemName"
              name="name"
              required
            />
          </div>
          <div class="mb-3">
            <label for="editItemCategory" class="form-label"
              >Category <span class="text-danger">*</span></label
            >
            <select
              class="form-select"
              id="editItemCategory"
              name="category"
              required
            >
              <option value="" disabled>Select category...</option>
              <option value="Grains & Cereals">Grains & Cereals</option>
              <option value="Oil Seeds">Oil Seeds</option>
              <option value="Pulses">Pulses</option>
              <option value="Spices">Spices</option>
              <option value="Fruits and Vegetables">
                Fruits and Vegetables
              </option>
              <option value="Sugar">Sugar</option>
              <option value="Jaggery">Jaggery</option>
              <option value="Coffee and Cocoa">Coffee and Cocoa</option>
              <option value="Coconut">Coconut</option>
              <option value="Nuts & Dry Fruits">Nuts & Dry Fruits</option>
              <option value="Chemicals">Chemicals</option>
              <option value="Wooden Pallets">Wooden Pallets</option>
              <option value="Packing Materials">Packing Materials</option>
              <option value="Apparels & Garments">Apparels & Garments</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editItemDescription" class="form-label"
              >Description <span class="text-danger">*</span></label
            >
            <textarea
              class="form-control"
              id="editItemDescription"
              name="description"
              rows="3"
              required
            ></textarea>
          </div>
          <div class="row">
            <div class="col-md-8">
              <div class="mb-3">
                <label for="editItemImageFile" class="form-label"
                  >New Image (Optional)</label
                >
                <input
                  type="file"
                  class="form-control"
                  id="editItemImageFile"
                  name="image"
                  accept="image/png, image/jpeg, image/gif"
                />
                <small class="form-text text-muted"
                  >Upload a new image to replace the current one.</small
                >
              </div>
            </div>
            <div class="col-md-4">
              <p class="mb-1">Current Image:</p>
              <img
                id="editItemCurrentImage"
                src=""
                alt="Current Image"
                class="img-thumbnail"
                style="max-height: 100px"
              />
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-outline-secondary"
            data-bs-dismiss="modal"
          >
            Cancel
          </button>
          <button type="submit" class="btn btn-primary" id="editSubmitBtn">
            <span
              class="spinner-border spinner-border-sm me-1"
              role="status"
              aria-hidden="true"
              style="display: none"
            ></span>
            <span class="button-text">Save Changes</span>
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Toast Container for Success/Failure Messages -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <!-- Toasts will be added here by JavaScript -->
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // --- View Item Modal ---
    const viewItemModal = new bootstrap.Modal(
      document.getElementById("viewItemModal")
    );
    const viewItemImageEl = document.getElementById("viewItemImage");
    const viewItemNameEl = document.getElementById("viewItemName");
    const viewItemCategoryEl = document.getElementById("viewItemCategory");
    const viewItemDescriptionEl = document.getElementById(
      "viewItemDescription"
    );
    const viewModalEditBtn = document.getElementById("viewModalEditBtn");
    let currentViewItemId = null;

    document.querySelectorAll(".view-item-btn").forEach((button) => {
      button.addEventListener("click", function () {
        currentViewItemId = this.dataset.id;
        viewItemNameEl.textContent = this.dataset.name;
        viewItemCategoryEl.textContent = this.dataset.category;
        viewItemDescriptionEl.textContent = this.dataset.description;
        viewItemImageEl.src = this.dataset.image;
        // viewItemModal.show(); // Bootstrap handles this via data-bs-toggle
      });
    });

    viewModalEditBtn.addEventListener("click", function () {
      viewItemModal.hide();
      // Find the corresponding edit button for the currentViewItemId and click it
      const editButtonForViewedItem = document.querySelector(
        `.edit-item-btn[data-id="${currentViewItemId}"]`
      );
      if (editButtonForViewedItem) {
        editButtonForViewedItem.click(); // Programmatically click the edit button
      }
    });

    // --- Edit Item Modal ---
    const editItemModal = new bootstrap.Modal(
      document.getElementById("editItemModal")
    );
    const editItemForm = document.getElementById("editItemForm");
    const editItemIdEl = document.getElementById("editItemId");
    const editItemNameEl = document.getElementById("editItemName");
    const editItemCategoryEl = document.getElementById("editItemCategory");
    const editItemDescriptionEl = document.getElementById(
      "editItemDescription"
    );
    const editItemCurrentImageEl = document.getElementById(
      "editItemCurrentImage"
    );
    const editSubmitButton = document.getElementById("editSubmitBtn");
    const editButtonText = editSubmitButton.querySelector(".button-text");
    const editSpinner = editSubmitButton.querySelector(".spinner-border");

    document.querySelectorAll(".edit-item-btn").forEach((button) => {
      button.addEventListener("click", function () {
        const itemId = this.dataset.id;
        editItemIdEl.value = itemId;
        editItemNameEl.value = this.dataset.name;
        editItemCategoryEl.value = this.dataset.category;
        editItemDescriptionEl.value = this.dataset.description;
        editItemCurrentImageEl.src = this.dataset.image;
        document.getElementById("editItemImageFile").value = ""; // Clear file input

        // Set form action dynamically. Use _method=PUT for RESTful update.
        editItemForm.action = `/admin/api/exports/${itemId}?_method=PUT`;
        // editItemModal.show(); // Bootstrap handles this
      });
    });

    editItemForm.addEventListener("submit", function (event) {
      if (!editItemForm.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
        editItemForm.classList.add("was-validated");
        return;
      }
      // Disable button and show loading state (if using AJAX)
      // For standard form submission, this might not be as critical as page reloads
      editSubmitButton.disabled = true;
      if (editButtonText) editButtonText.textContent = "Saving...";
      if (editSpinner) editSpinner.style.display = "inline-block";

      // Form will submit. If successful, server redirects and flashes message.
      // If using AJAX, you'd handle response here.
    });

    // --- Delete Confirmation ---
    document.querySelectorAll(".delete-form").forEach((form) => {
      form.addEventListener("submit", function (event) {
        if (
          !confirm(
            "Are you sure you want to delete this item? This action cannot be undone."
          )
        ) {
          event.preventDefault();
        }
      });
    });

    // --- Toast Function (Example) ---
    const toastContainer = document.querySelector(".toast-container");
    function showToast(message, type = "success") {
      const toastId = "toast-" + Date.now();
      const toastHTML = `
            <div id="${toastId}" class="toast align-items-center text-white bg-${
        type === "success" ? "success" : "danger"
      } border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
      toastContainer.insertAdjacentHTML("beforeend", toastHTML);
      const toastElement = document.getElementById(toastId);
      const toast = new bootstrap.Toast(toastElement, { delay: 5000 });
      toast.show();
      toastElement.addEventListener("hidden.bs.toast", () =>
        toastElement.remove()
      );
    }

    // Example: Check for query params for client-side toast (if not using server-side flash for everything)
    // const urlParams = new URLSearchParams(window.location.search);
    // if (urlParams.get('updateSuccess') === 'true') {
    //     showToast('Item updated successfully!', 'success');
    //     history.replaceState(null, '', window.location.pathname); // Clean URL
    // }
    // if (urlParams.get('updateError')) {
    //     showToast('Error updating item: ' + urlParams.get('updateError'), 'danger');
    //     history.replaceState(null, '', window.location.pathname); // Clean URL
    // }
  });
</script>
